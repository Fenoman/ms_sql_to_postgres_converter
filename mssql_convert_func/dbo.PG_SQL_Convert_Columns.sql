IF OBJECT_ID('dbo.PG_SQL_Convert_Columns') IS NOT NULL
	DROP FUNCTION dbo.PG_SQL_Convert_Columns
GO

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

-- =============================================
-- Author:		e-pavlichenko
-- CREATE date: 25.05.2018
-- Alter date:	25.05.2018
-- Description:	Конвертация колонок
-- =============================================
CREATE FUNCTION dbo.PG_SQL_Convert_Columns
(
	@T_object_id INT,
	@T_name VARCHAR(255),
	@PK_exists_index_id INT,
	@cc_exists_B_Exists BIT,
	@kc_exists_B_Exists BIT
)
RETURNS VARCHAR(max)
AS
BEGIN 
	
	RETURN
	REVERSE(STUFF(REVERSE
	(
		(
			SELECT 
				-- имя колонки
				CHAR(9) + IIF(ISNUMERIC(C.name) = 1, '"' + C.name + '"', C.name) + ' '
				-- ее тип в PG
				+ dbo.PG_Columns_Converter(C.name, @T_name, Ts.name, C.max_length, C.precision, C.scale)
				-- допустимость NULL
				+ IIF(C.is_nullable = 1, '', ' NOT NULL')
				-- IDENTITY
				+ IIF(c.is_identity = 1, ' GENERATED BY DEFAULT AS IDENTITY', '')
				-- Значение по умолчанию
				+ IIF(dc.name IS NOT NULL, ' DEFAULT ' + dbo.PG_DefaultValuesMapping
														(
															Ts.name, 
															dbo.PG_FunctionsMapping(dbo.PG_SchemeMapping(dbo.PG_Remove_Brackets(dc.definition, 0)))
														)
					, '')
				-- ограничение для столбца
				+ IIF(cc.object_id IS NOT NULL, ' CONSTRAINT ' + cc.name + ' CHECK (' 
														+	dbo.PG_Add_Brackets(
																dbo.PG_Replace_Pattern(
																	dbo.PG_Remove_Brackets(
																		dbo.PG_CheckConstraints_Convert(cc.definition), 0
																	)
																) 
															)
													+ ')'
					, '')
				-- Ставим в конце запятую и перевод строки
				+ ',' + CHAR(10)
			FROM sys.columns AS C
			LEFT JOIN sys.default_constraints dc 
				ON	dc.object_id		= c.default_object_id
				AND dc.parent_object_id = c.object_id
			LEFT JOIN sys.check_constraints cc
				ON	CC.parent_object_id = C.object_id
				AND CC.parent_column_id = C.column_id
			INNER JOIN sys.types AS Ts
				ON  Ts.system_type_id = c.system_type_id
				AND Ts.user_type_id = c.user_type_id
			WHERE C.object_id = @T_object_id
			ORDER BY 
					/*------------------------------------------------------------------------------------
						порядок колонок при создании таблицы
					-------------------------------------------------------------------------------------*/
					/* -- Example
					IIF(C.name = 'ColOne', 1, 0) DESC,
					IIF(C.name = 'ColTwo', 1, 0) DESC,
					IIF(C.name = 'ColThree', 1, 0) DESC,
					IIF(C.name LIKE 'SomeName[_]%' AND C.name <> 'SomeName_999', 1, 0) DESC,
					IIF(C.name LIKE 'F[_]%', 1, 0) DESC,
					IIF(C.name LIKE 'C[_]%', 1, 0) DESC,
					IIF(C.name LIKE 'N[_]%', 1, 0) DESC,
					IIF(C.name LIKE 'B[_]%', 1, 0) DESC, 
					IIF(C.name LIKE 'D[_]%', 1, 0) DESC, 
					IIF(C.name LIKE 'I[_]%', 1, 0) DESC, 
					IIF(C.name LIKE 'int%', 1, 0) DESC,
						TRY_CAST(REPLACE(c.name, 'int', '') AS INT) ASC,
					IIF(C.name LIKE 'money%', 1, 0) DESC,
						TRY_CAST(REPLACE(c.name, 'money', '') AS INT) ASC,
					IIF(C.name LIKE 'bit%', 1, 0) DESC,
						TRY_CAST(REPLACE(c.name, 'bit', '') AS INT) ASC,
					IIF(C.name LIKE 'datetime%', 1, 0) DESC,
						TRY_CAST(REPLACE(c.name, 'datetime', '') AS INT) ASC,
					IIF(C.name LIKE 'string%', 1, 0) DESC,
						TRY_CAST(REPLACE(c.name, 'string', '') AS INT) ASC,
					IIF(C.name NOT LIKE 'S[_]%', 1, 0) DESC,
					*/
					c.name ASC
			FOR XML path(''), TYPE
		).value('./text()[1]','varchar(max)')
	), 1, 2, IIF(@PK_exists_index_id IS NULL AND @cc_exists_B_Exists IS NULL AND @kc_exists_B_Exists IS NULL, '', ',') ))
	

END
GO